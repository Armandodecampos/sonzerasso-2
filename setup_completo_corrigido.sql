-- ====================================================================
--      SCRIPT ÚNICO E CORRIGIDO PARA CONFIGURAÇÃO DE PASTAS
-- ====================================================================
--
-- O que este script faz:
-- 1. ADICIONA UMA CHAVE PRIMÁRIA `id` à sua tabela "Musicas", que é
--    a causa do erro que você encontrou.
-- 2. Cria as tabelas `pastas` e `musicas_pastas`.
-- 3. Aplica todas as políticas de segurança (RLS) necessárias.
--
-- ====================================================================

-- PASSO 1: CORRIGIR A TABELA "Musicas"

-- Adiciona uma coluna `id` do tipo BIGINT (número grande) e a define como
-- a chave primária. A cláusula "GENERATED BY DEFAULT AS IDENTITY"
-- faz com que ela se auto-incremente, como esperado.
ALTER TABLE public."Musicas" ADD COLUMN IF NOT EXISTS id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY;


-- PASSO 2: CRIAR AS NOVAS TABELAS

-- Tabela para armazenar as pastas criadas pelos usuários
CREATE TABLE IF NOT EXISTS public.pastas (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
  title TEXT NOT NULL,
  icon_class TEXT,
  bg_color TEXT,
  icon_color TEXT,
  created_at TIMESTAMPTZ DEFAULT now()
);

-- Tabela de associação para ligar músicas a pastas (agora vai funcionar)
CREATE TABLE IF NOT EXISTS public.musicas_pastas (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  pasta_id UUID REFERENCES public.pastas(id) ON DELETE CASCADE,
  musica_id BIGINT REFERENCES public."Musicas"(id) ON DELETE CASCADE,
  created_at TIMESTAMPTZ DEFAULT now(),
  UNIQUE(pasta_id, musica_id)
);


-- PASSO 3: APLICAR AS POLÍTICAS DE SEGURANÇA (RLS)

-- Habilita a RLS para a tabela de pastas.
ALTER TABLE public.pastas ENABLE ROW LEVEL SECURITY;

-- Remove a política antiga se ela já existir, para evitar erro ao rodar de novo
DROP POLICY IF EXISTS "Permitir gerenciamento total de pastas para donos" ON public.pastas;

-- Política para a tabela "pastas":
CREATE POLICY "Permitir gerenciamento total de pastas para donos"
ON public.pastas FOR ALL
USING (auth.uid() = user_id)
WITH CHECK (auth.uid() = user_id);

-- Habilita a RLS para a tabela de associação (musicas_pastas).
ALTER TABLE public.musicas_pastas ENABLE ROW LEVEL SECURITY;

-- Remove a política antiga se ela já existir
DROP POLICY IF EXISTS "Permitir gerenciamento de musicas em pastas para donos" ON public.musicas_pastas;

-- Política para a tabela "musicas_pastas":
CREATE POLICY "Permitir gerenciamento de musicas em pastas para donos"
ON public.musicas_pastas FOR ALL
USING ( (SELECT user_id FROM public.pastas WHERE id = pasta_id) = auth.uid() )
WITH CHECK ( (SELECT user_id FROM public.pastas WHERE id = pasta_id) = auth.uid() );
